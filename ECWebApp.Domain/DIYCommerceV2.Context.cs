//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECWebApp.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DIYCommerceV2Entities : DbContext
    {
        public DIYCommerceV2Entities()
            : base("name=DIYCommerceV2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Accessory> Accessories { get; set; }
        public virtual DbSet<AccessoriesTemplateCategory> AccessoriesTemplateCategories { get; set; }
        public virtual DbSet<AccessoriesTemplate> AccessoriesTemplates { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<CartItem> CartItems { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomProduct> CustomProducts { get; set; }
        public virtual DbSet<EmailConfirm> EmailConfirms { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<LastAccess> LastAccesses { get; set; }
        public virtual DbSet<OrderAssignment> OrderAssignments { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<PasswordReset> PasswordResets { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Promotion> Promotions { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Review> Reviews { get; set; }
        public virtual DbSet<RoleAssign> RoleAssigns { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SubRegion> SubRegions { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tailor> Tailors { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<Texture> Textures { get; set; }
        public virtual DbSet<vw_CustomerAuthentication> vw_CustomerAuthentication { get; set; }
        public virtual DbSet<vw_PopularAuthor> vw_PopularAuthor { get; set; }
        public virtual DbSet<vw_PopularProduct> vw_PopularProduct { get; set; }
        public virtual DbSet<vw_ProductList> vw_ProductList { get; set; }
        public virtual DbSet<Specialize> Specializes { get; set; }
        public virtual DbSet<vw_CartItemTemplateID> vw_CartItemTemplateID { get; set; }
        public virtual DbSet<vw_CartItemsCategory> vw_CartItemsCategory { get; set; }
        public virtual DbSet<vw_CartItemsTemplateID> vw_CartItemsTemplateID { get; set; }
        public virtual DbSet<vw_ExpTailorAssignment> vw_ExpTailorAssignment { get; set; }
        public virtual DbSet<vw_OrderHistory> vw_OrderHistory { get; set; }
        public virtual DbSet<vw_ReviewsDetails> vw_ReviewsDetails { get; set; }
        public virtual DbSet<vw_TailorDetails> vw_TailorDetails { get; set; }
        public virtual DbSet<vw_TailorPerformance> vw_TailorPerformance { get; set; }
        public virtual DbSet<vw_TaskHistory> vw_TaskHistory { get; set; }
        public virtual DbSet<vw_TrialTailor> vw_TrialTailor { get; set; }
    
        public virtual int AssignOrderToTailor(Nullable<System.Guid> selectedTailorID, Nullable<System.Guid> assignedOrderID, Nullable<int> orderQuantity)
        {
            var selectedTailorIDParameter = selectedTailorID.HasValue ?
                new ObjectParameter("SelectedTailorID", selectedTailorID) :
                new ObjectParameter("SelectedTailorID", typeof(System.Guid));
    
            var assignedOrderIDParameter = assignedOrderID.HasValue ?
                new ObjectParameter("AssignedOrderID", assignedOrderID) :
                new ObjectParameter("AssignedOrderID", typeof(System.Guid));
    
            var orderQuantityParameter = orderQuantity.HasValue ?
                new ObjectParameter("OrderQuantity", orderQuantity) :
                new ObjectParameter("OrderQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignOrderToTailor", selectedTailorIDParameter, assignedOrderIDParameter, orderQuantityParameter);
        }
    
        public virtual int CalculateAverageElapsedTime(Nullable<System.Guid> updatedOrderID, Nullable<System.Guid> completedTailorID, Nullable<int> numOfOrders, Nullable<int> newElapsedDay, Nullable<int> oldAverageElapsedDay, Nullable<int> newAverageElapsedDay)
        {
            var updatedOrderIDParameter = updatedOrderID.HasValue ?
                new ObjectParameter("UpdatedOrderID", updatedOrderID) :
                new ObjectParameter("UpdatedOrderID", typeof(System.Guid));
    
            var completedTailorIDParameter = completedTailorID.HasValue ?
                new ObjectParameter("CompletedTailorID", completedTailorID) :
                new ObjectParameter("CompletedTailorID", typeof(System.Guid));
    
            var numOfOrdersParameter = numOfOrders.HasValue ?
                new ObjectParameter("numOfOrders", numOfOrders) :
                new ObjectParameter("numOfOrders", typeof(int));
    
            var newElapsedDayParameter = newElapsedDay.HasValue ?
                new ObjectParameter("NewElapsedDay", newElapsedDay) :
                new ObjectParameter("NewElapsedDay", typeof(int));
    
            var oldAverageElapsedDayParameter = oldAverageElapsedDay.HasValue ?
                new ObjectParameter("OldAverageElapsedDay", oldAverageElapsedDay) :
                new ObjectParameter("OldAverageElapsedDay", typeof(int));
    
            var newAverageElapsedDayParameter = newAverageElapsedDay.HasValue ?
                new ObjectParameter("NewAverageElapsedDay", newAverageElapsedDay) :
                new ObjectParameter("NewAverageElapsedDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculateAverageElapsedTime", updatedOrderIDParameter, completedTailorIDParameter, numOfOrdersParameter, newElapsedDayParameter, oldAverageElapsedDayParameter, newAverageElapsedDayParameter);
        }
    
        public virtual ObjectResult<CheckOutCart_Result> CheckOutCart(Nullable<System.Guid> succeedCartID)
        {
            var succeedCartIDParameter = succeedCartID.HasValue ?
                new ObjectParameter("SucceedCartID", succeedCartID) :
                new ObjectParameter("SucceedCartID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckOutCart_Result>("CheckOutCart", succeedCartIDParameter);
        }
    
        public virtual int CustomerRateProduct(Nullable<System.Guid> ratedOrderID, Nullable<System.Guid> ratedTailorID, Nullable<decimal> ratingValue, Nullable<decimal> averageRatingValue, string reviewComments, string reviewKeywords, Nullable<int> polarity, string ratedCustomer)
        {
            var ratedOrderIDParameter = ratedOrderID.HasValue ?
                new ObjectParameter("RatedOrderID", ratedOrderID) :
                new ObjectParameter("RatedOrderID", typeof(System.Guid));
    
            var ratedTailorIDParameter = ratedTailorID.HasValue ?
                new ObjectParameter("RatedTailorID", ratedTailorID) :
                new ObjectParameter("RatedTailorID", typeof(System.Guid));
    
            var ratingValueParameter = ratingValue.HasValue ?
                new ObjectParameter("RatingValue", ratingValue) :
                new ObjectParameter("RatingValue", typeof(decimal));
    
            var averageRatingValueParameter = averageRatingValue.HasValue ?
                new ObjectParameter("AverageRatingValue", averageRatingValue) :
                new ObjectParameter("AverageRatingValue", typeof(decimal));
    
            var reviewCommentsParameter = reviewComments != null ?
                new ObjectParameter("ReviewComments", reviewComments) :
                new ObjectParameter("ReviewComments", typeof(string));
    
            var reviewKeywordsParameter = reviewKeywords != null ?
                new ObjectParameter("ReviewKeywords", reviewKeywords) :
                new ObjectParameter("ReviewKeywords", typeof(string));
    
            var polarityParameter = polarity.HasValue ?
                new ObjectParameter("Polarity", polarity) :
                new ObjectParameter("Polarity", typeof(int));
    
            var ratedCustomerParameter = ratedCustomer != null ?
                new ObjectParameter("RatedCustomer", ratedCustomer) :
                new ObjectParameter("RatedCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerRateProduct", ratedOrderIDParameter, ratedTailorIDParameter, ratingValueParameter, averageRatingValueParameter, reviewCommentsParameter, reviewKeywordsParameter, polarityParameter, ratedCustomerParameter);
        }
    
        public virtual int DeleteCustomProduct(Nullable<System.Guid> deletedProductID)
        {
            var deletedProductIDParameter = deletedProductID.HasValue ?
                new ObjectParameter("DeletedProductID", deletedProductID) :
                new ObjectParameter("DeletedProductID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomProduct", deletedProductIDParameter);
        }
    
        public virtual int TailorCompleteOrder(Nullable<System.Guid> completedOrderID, Nullable<System.Guid> completedTailorID, Nullable<int> completedOrderQuantity, Nullable<int> newAverageElapsedDay)
        {
            var completedOrderIDParameter = completedOrderID.HasValue ?
                new ObjectParameter("CompletedOrderID", completedOrderID) :
                new ObjectParameter("CompletedOrderID", typeof(System.Guid));
    
            var completedTailorIDParameter = completedTailorID.HasValue ?
                new ObjectParameter("CompletedTailorID", completedTailorID) :
                new ObjectParameter("CompletedTailorID", typeof(System.Guid));
    
            var completedOrderQuantityParameter = completedOrderQuantity.HasValue ?
                new ObjectParameter("CompletedOrderQuantity", completedOrderQuantity) :
                new ObjectParameter("CompletedOrderQuantity", typeof(int));
    
            var newAverageElapsedDayParameter = newAverageElapsedDay.HasValue ?
                new ObjectParameter("NewAverageElapsedDay", newAverageElapsedDay) :
                new ObjectParameter("NewAverageElapsedDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TailorCompleteOrder", completedOrderIDParameter, completedTailorIDParameter, completedOrderQuantityParameter, newAverageElapsedDayParameter);
        }
    }
}
